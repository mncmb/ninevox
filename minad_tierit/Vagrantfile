Vagrant.configure("2") do |config|

prefix = "tierit_" # vbox VM name prefix 
defaults = ["minad.lab", "10.10.110.10", "Ethernet 2"]
ressources = {:cpus => "2", :memory => "4096"}
boxes = [
  { 
    :name => "DC01",  
    :iface => [{:name => "citadel",  :ip => "10.10.110.10"}], 
    :box => "gusztavvargadr/windows-server", 
    :os => "windows", 
    :scripts => [{:path => "create-domain.ps1", :args =>defaults, :reload => true}],
  },
  { 
  :name => "SRV01", 
  :iface => [{:name => "citadel",    :ip => "10.10.110.22"},
             {:name => "inner_circle",       :ip => "192.168.8.22"},
             {:name => "outer_reaches",       :ip => "172.16.0.22"}],
  # :natnet => true,    # uncomment if you want to put attack box in a nat network 
  :box => "gusztavvargadr/windows-server", 
  :os => "windows",
  :scripts => [{:path => "join-domain.ps1", :args =>defaults, :reload => true}], 
  },
  { 
  :name => "SRV02", 
  :iface => [{:name => "citadel",    :ip => "10.10.110.24"},
             {:name => "inner_circle",  :ip => "192.168.8.24"}], 
  :box => "gusztavvargadr/windows-server", 
  :os => "windows",
  :scripts => [{:path => "join-domain.ps1", :args =>defaults, :reload => true}], 
  },
#  { 
#  :name => "elastic", 
#  :iface => [{:name => "citadel", :ip => "10.10.110.100"}], 
#  :box => "ubuntu/jammy64", 
#  :os => "linux",
#  :scripts => [{:path => "deploy-ecp.sh", :args => [], :reload => false}], 
#  :memory => "8096",
#  },
  # { 
  # :name => "kali", 
  # :iface => [{:name => "outer_reaches", :ip => "172.16.0.50"}], 
  # :box => "kalilinux/rolling", 
  # :os => "linux",
  # :scripts => [], 
  # },
]

  config.vm.boot_timeout = 600
  config.vm.graceful_halt_timeout = 600
  config.winrm.retry_limit = 30
  config.winrm.retry_delay = 10

  boxes.each do |box|
    config.vm.define box[:name] do |target|
      # BOX
      target.vm.box_check_update = false 
      target.vm.hostname = box[:name]
      target.vm.provider "virtualbox" do |v|
        v.linked_clone = true
        v.name = prefix + box[:name]
        v.memory = box.key?(:memory) ? box[:memory] : ressources[:memory]
        v.cpus = box.key?(:cpus) ? box[:cpus] : ressources[:cpus]
        v.customize ["modifyvm", :id, "--vram", "32"]
        v.customize ["modifyvm", :id, "--clipboard", "bidirectional"] 
        if box.key?(:natnet) 
          v.customize ["modifyvm", :id, "--nic4", "natnetwork"]             # set as nic4 to avoid collisions
          v.customize ["modifyvm", :id, "--nat-network4", "NatNetwork"]
        end
      end
      target.vm.box_check_update = false
      target.vm.box = box[:box]
      target.vm.synced_folder '.', '/vagrant', disabled: false

      # IP - also see https://developer.hashicorp.com/vagrant/docs/providers/virtualbox/networking
      box[:iface].each do |iface|
        target.vm.network :private_network, ip: iface[:ip], virtualbox__intnet: iface[:name]
      end

      # OS specific
      if box[:os] == "windows"
        target.vm.guest = :windows
        target.vm.communicator = "winrm"
        target.winrm.transport = :plaintext # req for windc after promo
        target.winrm.basic_auth_only = true # req for windc after promo
      else
        target.vm.communicator = "ssh"
      end

      # iterate through scripts if there are any
      if box.key?(:scripts)
        box[:scripts].each do |script|
          target.vm.provision :shell, :path => script[:path], :args => script[:args], privileged: false
          if script[:reload]
            target.vm.provision "reload"
          end
        end
      end

    end
  end
end
