# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|

  config.vm.box = "windows/win10-edge"
  config.vm.define "win10-dev-vm"
  
  config.vm.provider "virtualbox" do |v|
	v.name = "win10 dev VM"
	#v.gui = true
	v.cpus = 3
	v.memory = 8192
	v.customize ["modifyvm", :id, "--vram", "128"]
  end
  
  # set shared folders
  config.vm.synced_folder "../../Documents/dev", "C:\\devshare", automount: true
  
  # Configuring general information and winrm
  config.vm.guest = :windows
  config.vm.communicator = ENV['communicator'] || "winrm"
  config.winrm.username = "IEUser"
  config.winrm.password = "Passw0rd!"
  # if deployment fails bc machine didn't boot in time, 
  # turn up the boot timeout 
  config.vm.boot_timeout = 180
  config.vm.graceful_halt_timeout = 30
  
  # Configuring ssh
  config.ssh.username="IEUser"
  config.ssh.password="Passw0rd!"
  config.ssh.insert_key = false
  config.ssh.sudo_command = ''
  config.ssh.shell = 'sh -l'
  
  # forward ssh, rdp and winrm from host to guest
  # config.vm.network :forwarded_port, guest: 3389, host: 3393
  # config.vm.network :forwarded_port, guest: 22, host: 4422
  #
  # WINRM ports statically forwared for use with ansible inventory
  #   there is a problem here with vagrant using winrm on default port for initial provisioning 
  #   and vagrants auto generated ansible inventory trying to use the same winrm connection 
  config.vm.network :forwarded_port, guest: 5985, host: 51985, id: "winrm", auto_correct: true
  config.vm.network :forwarded_port, guest: 5986, host: 51986, id: "winrms", auto_correct: true
  # TODO there is one pain point with the current config: 
  # initial setup needs communication via winrm http (5985) because only
  # that is activated on the box.
  # Vagrant on the other hand uses HTTPS (5986) per default and this is
  # also the preferred option. So in order to use vagrant auto generated inventory
  # the communicator has to be changed during the course of the deployment from httpwinrm 
  # to https winrm. Not sure how to do that right now.

  
  # start the bootstrap script
  # - enables RDP & WINRM:
  config.vm.provision :shell, path: "bootstrap.ps1"  

  # prepare ansible 
  # executes script from "https://raw.githubusercontent.com/ansible/ansible/devel/examples/scripts/ConfigureRemotingForAnsible.ps1
  config.vm.provision :shell, path: "provisioning/ConfigureRemotingForAnsible.ps1" 
  # provision with ansible
  config.vm.provision "ansible" do |ansible|
    ansible.playbook = "provisioning/playbook.yml"
    ansible.inventory_path = "inventory.yml"   
  end
end
