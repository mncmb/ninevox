Vagrant.configure("2") do |config|

# Uncomment this depending on the provider you want to us 
# ENV['VAGRANT_DEFAULT_PROVIDER'] = 'vmware_desktop'
# default args - "domain name", "DC ip", "primary interface"
prefix = "mallab" # vbox VM name prefix 
defaults = ["10.10.10.1", "Ethernet 2"]
ressources = {:cpus => "2", :memory => "4096"}
boxes = [
  # windows server 2022 : don't work for now
  #{ :name => "DC01",  :ip => "192.168.56.10", :box => "StefanScherer/windows_2022", :box_version => "2021.08.23", :os => "windows"},
  # windows server 2019
  { 
    :name => "remnux",  
    :iface => [{:name => "mallab_internal",  :ip => "10.10.10.1"}], 
    :box => "mncmbb/remnuxv7_2004", 
    :os => "linux", 
    :scripts => [],
  },
  { 
  :name => "win11-test", 
  :iface => [{:name => "mallab_internal",  :ip => "10.10.10.21"}],
  :box => "gusztavvargadr/windows-11", 
  :os => "windows",
  :scripts => [{:path => "prepare-windows.ps1", :args => defaults, :reload => false}], 
  :memory => "8096",  
  },
#  { 
#  :name => "elastic", 
#  :iface => [{:name => "mallab_internal", :ip => "10.10.10.100"}], 
#  :box => "ubuntu/jammy64", 
#  :os => "linux",
#  :scripts => [{:path => "deploy-ecp.sh", :args => [], :reload => false}], 
#  :memory => "8096",
#  },
]

  config.vm.boot_timeout = 600
  config.vm.graceful_halt_timeout = 600
  config.winrm.retry_limit = 30
  config.winrm.retry_delay = 10

  boxes.each do |box|
    config.vm.define box[:name] do |target|
      # BOX
      target.vm.box_check_update = false 
      target.vm.hostname = box[:name]
      target.vm.provider "virtualbox" do |v|
        v.linked_clone = true
        v.name = prefix + "_" + box[:name]
        v.memory = box.key?(:memory) ? box[:memory] : ressources[:memory]
        v.cpus = box.key?(:cpus) ? box[:cpus] : ressources[:cpus]
        v.customize ["modifyvm", :id, "--vram", "32"]
        v.customize ["modifyvm", :id, "--groups", "/"+prefix]
        #v.customize ["modifyvm", :id, "--clipboard", "bidirectional"] 
        if box.key?(:natnet) 
          v.customize ["modifyvm", :id, "--nic4", "natnetwork"]             # set as nic4 to avoid collisions
          v.customize ["modifyvm", :id, "--nat-network4", "NatNetwork"]
        end
      end
      target.vm.box_check_update = false
      target.vm.box = box[:box]
      target.vm.synced_folder '.', '/vagrant', disabled: false

      # IP - also see https://developer.hashicorp.com/vagrant/docs/providers/virtualbox/networking
      box[:iface].each do |iface|
        target.vm.network :private_network, ip: iface[:ip], virtualbox__intnet: iface[:name]
      end
      # target.vm.network :private_network, ip: box[:ip][1], virtualbox__intnet: box[:ip][0]
      # if box.key?(:ip2)  # if defined set another internal nic
      #   target.vm.network :private_network, ip: box[:ip2][1], virtualbox__intnet: box[:ip2][0]
      # end

      # OS specific
      if box[:os] == "windows"
        target.vm.guest = :windows
        target.vm.communicator = "winrm"
        #target.winrm.transport = :plaintext # req for windc after promo
        #target.winrm.basic_auth_only = true # req for windc after promo
      else
        #target.vm.communicator = "ssh"
      end

      # iterate through scripts if there are any
      if box.key?(:scripts)
        box[:scripts].each do |script|
          target.vm.provision :shell, :path => script[:path], :args => script[:args], privileged: false
          if script[:reload]
            target.vm.provision "reload"
          end
        end
      end

    end
  end
end
